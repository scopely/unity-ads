//This file is generated by GenerateUnityApi.java. Do not edit.
#include "UnityAdsAndroidBridgeJNI.h"

/* FUNCTION POINTERS */
static jmethodID init;
static jmethodID show;
static jmethodID canShowAds;
static jmethodID setLogLevel;
static jmethodID setCampaignDataURL;

void RegisterMethods()
{
	JAVA_ATTACH_CURRENT_THREAD();

	init = jni_env->GetMethodID(adsWrapperClass, "init", "(Landroid/app/Activity;Ljava/lang/String;ZILjava/lang/String;)V");
	PRINT_CLEAR_EXCEPTION
	if (init == 0)
		UNITYADS_DEBUG("Couldn't find function:init");
	show = jni_env->GetMethodID(adsWrapperClass, "show", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z");
	PRINT_CLEAR_EXCEPTION
	if (show == 0)
		UNITYADS_DEBUG("Couldn't find function:show");
	canShowAds = jni_env->GetMethodID(adsWrapperClass, "canShowAds", "(Ljava/lang/String;)Z");
	PRINT_CLEAR_EXCEPTION
	if (canShowAds == 0)
		UNITYADS_DEBUG("Couldn't find function:canShowAds");
	setLogLevel = jni_env->GetMethodID(adsWrapperClass, "setLogLevel", "(I)V");
	PRINT_CLEAR_EXCEPTION
	if (setLogLevel == 0)
		UNITYADS_DEBUG("Couldn't find function:setLogLevel");
	setCampaignDataURL = jni_env->GetMethodID(adsWrapperClass, "setCampaignDataURL", "(Ljava/lang/String;)V");
	PRINT_CLEAR_EXCEPTION
	if (setCampaignDataURL == 0)
		UNITYADS_DEBUG("Couldn't find function:setCampaignDataURL");
}

void UnityAdsAndroidBridge::Init(jobject activity, const char* gameId, bool testMode, int logLevel, const char* unityVersion)
{
	JAVA_ATTACH_CURRENT_THREAD();
	jstring j_gameId = jni_env->NewStringUTF(gameId);
	jstring j_unityVersion = jni_env->NewStringUTF(unityVersion);
	jni_env->CallVoidMethod(adsWrapperObject, init, activity, j_gameId, testMode, logLevel, j_unityVersion);
	if (jni_env->ExceptionOccurred())
	{
		jni_env->ExceptionClear();
	}
	jni_env->DeleteLocalRef(j_gameId);
	jni_env->DeleteLocalRef(j_unityVersion);
}

bool UnityAdsAndroidBridge::Show(const char* zoneId, const char* rewardItemKey, const char* optionsString)
{
	JAVA_ATTACH_CURRENT_THREAD();
	bool retval;
	jstring j_zoneId = jni_env->NewStringUTF(zoneId);
	jstring j_rewardItemKey = jni_env->NewStringUTF(rewardItemKey);
	jstring j_optionsString = jni_env->NewStringUTF(optionsString);
	retval = jni_env->CallBooleanMethod(adsWrapperObject, show, j_zoneId, j_rewardItemKey, j_optionsString);
	if (jni_env->ExceptionOccurred())
	{
		jni_env->ExceptionClear();
	}
	jni_env->DeleteLocalRef(j_zoneId);
	jni_env->DeleteLocalRef(j_rewardItemKey);
	jni_env->DeleteLocalRef(j_optionsString);
	return retval;
}

bool UnityAdsAndroidBridge::CanShowAds(const char* zone)
{
	JAVA_ATTACH_CURRENT_THREAD();
	bool retval;
	jstring j_zone = jni_env->NewStringUTF(zone);
	retval = jni_env->CallBooleanMethod(adsWrapperObject, canShowAds, j_zone);
	if (jni_env->ExceptionOccurred())
	{
		jni_env->ExceptionClear();
	}
	jni_env->DeleteLocalRef(j_zone);
	return retval;
}

void UnityAdsAndroidBridge::SetLogLevel(int logLevel)
{
	JAVA_ATTACH_CURRENT_THREAD();
	jni_env->CallVoidMethod(adsWrapperObject, setLogLevel, logLevel);
	if (jni_env->ExceptionOccurred())
	{
		jni_env->ExceptionClear();
	}
}

void UnityAdsAndroidBridge::SetCampaignDataURL(const char* url)
{
	JAVA_ATTACH_CURRENT_THREAD();
	jstring j_url = jni_env->NewStringUTF(url);
	jni_env->CallVoidMethod(adsWrapperObject, setCampaignDataURL, j_url);
	if (jni_env->ExceptionOccurred())
	{
		jni_env->ExceptionClear();
	}
	jni_env->DeleteLocalRef(j_url);
}

